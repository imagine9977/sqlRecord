<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sqlrecord.sqlrecord.member.model.dao.MemberMapper">
	
	<sql id="selectMember">
		SELECT 
				MEMBER_NO memberNo,    
			    MEMBER_ID memberId,    
			    MEMBER_PW memberPw,
			    NAME,
			    EMAIL,    
			    TELL,
			    ADDR1,
			    ADDR2,
			    POSTCODE,
			    BIRTH,
			    STATUS,
			    RESDATE
	      FROM
	    		MEMBER
	</sql>
	
	<sql id="findAllMember">
		SELECT
	            M.MEMBER_ID memberId,
	            M.NAME name,
	            M.RESDATE resdate,
	            SUM(PO.POINT_AMOUNT) CURRENT_POINT
	      FROM
	            MEMBER M
	      LEFT
	      JOIN
	            POINT PO ON M.MEMBER_NO = PO.MEMBER_NO
	     WHERE
	            M.MEMBER_ID != 'admin'
	</sql>
	
	<select id="login" parameterType="member" resultType="member">
		<include refid="selectMember"/>
		WHERE
				MEMBER_ID = #{memberId}
		  AND
		  		STATUS = 'Y'
	</select>
	
	<select id="getMember" parameterType="String" resultType="member">
		<include refid="selectMember"/>
		WHERE
				MEMBER_ID = #{memberId}
	</select>
	
	<insert id="insMember" parameterType="member">
		INSERT 
			INTO MEMBER (
						 MEMBER_NO,
            			 MEMBER_ID,
			             MEMBER_PW,
			             NAME,
			             EMAIL,
			             TELL,
			             ADDR1,
			             ADDR2,
			             POSTCODE,
			             BIRTH
        	   			) 
        	   VALUES   (
        	   			 member_SEQ.NEXTVAL,
			             #{memberId},
			             #{memberPw},
			             #{name},
			             #{email},
			             #{tell},
			             #{addr1},
			             #{addr2},
			             #{postcode},
			             #{birth}
       					)
	</insert>
	
	<insert id="insGenre" parameterType="MemberGenre">
		INSERT
			INTO MEMBER_GENRE (
						TAG_NO,
						MEMBER_NO
						)
				VALUES (
						#{tagNo},
						member_SEQ.CURRVAL
				     	)
	</insert>
	  
	<select id="infoId" parameterType="member" resultType="member">
		SELECT
				MEMBER_ID memberId,
				MEMBER_PW memberPw,
				NAME,
				EMAIL
		  FROM
		  		MEMBER
	  	 WHERE
	  	 		MEMBER_ID = #{memberId}
		   AND		  	 
	  	 		NAME = #{name}
  	 	   AND	
	  	 		EMAIL = #{email} 
	</select>
	
	<update id="pwChange" parameterType="member">
		UPDATE
				MEMBER
		   SET
		   		MEMBER_PW = #{memberPw}
	   	 WHERE
	   	 		MEMBER_ID = #{memberId}
		   AND
		        NAME = #{name}
		   AND
		        EMAIL = #{email}
	</update>
	
	
	
	<!-- 관리자 페이지 : 회원 전체 조회 -->
	<select id="findAllMemberY" resultType="member">
	    <include refid="findAllMember" />
	       AND
	       		STATUS = 'Y'
	     GROUP
	        BY
	            M.MEMBER_ID, M.NAME, M.RESDATE, M.MEMBER_NO
	     ORDER
	        BY
	            M.MEMBER_NO ASC;
	</select>
	
	<!-- 관리자 페이지 : 탈퇴 회원 전체 조회 -->
	<select id="findAllMemberN" resultType="member">
	    <include refid="findAllMember" />
	       AND
	       		STATUS = 'N'
	     GROUP
	        BY
	            M.MEMBER_ID, M.NAME, M.RESDATE, M.MEMBER_NO
	     ORDER
	        BY
	            M.MEMBER_NO ASC;
	</select>
	
	<!-- 관리자 페이지 : 회원 1명 상세정보 조회 -->
	<select id="getOneMember" parameterType="String" resultType="member">
		<include refid="selectMember"/>
		WHERE
				MEMBER_NO = #{memberNo}
	</select>

</mapper>
