<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sqlrecord.sqlrecord.member.model.dao.MemberMapper">
	
	<sql id="selectMember">
		SELECT 
				MEMBER_NO memberNo,    
			    MEMBER_ID memberId,    
			    MEMBER_PW memberPw,
			    NAME,
			    EMAIL,    
			    TELL,
			    ADDR1,
			    ADDR2,
			    POSTCODE,
			    BIRTH,
			    STATUS,
			    RESDATE
	      FROM
	    		MEMBER
	</sql>
	<sql id="selectAdminMember">
	SELECT
            	MEMBER_NO memberNo,
            	MEMBER_ID memberId,
            	NAME name,
            	TELL tell,
            	ADDR1 addr1,
           		ADDR2 addr2,
            	POSTCODE postcode,
            	STATUS status,
            	BIRTH birth,
            	EMAIL email,
            	RESDATE,
            	POINT
          FROM
            	(SELECT 
                		MEMBER_NO,
		                MEMBER_ID,
		                NAME,
		                TELL,
		                ADDR1,
		                ADDR2,
		                POSTCODE,
		                STATUS,
		                BIRTH,
		                EMAIL,
		                RESDATE,
		                POINT,
		                ROWNUM RNUM
            	  FROM
               			(SELECT 
			                    M.MEMBER_NO,
			                    M.MEMBER_ID,
			                    M.NAME,
			                    M.TELL,
			                    M.ADDR1,
			                    M.ADDR2,
			                    M.POSTCODE,
			                    M.STATUS,
			                    M.BIRTH,
			                    M.EMAIL,
			                    M.RESDATE,
			                    NVL(SUM(PO.POINT_AMOUNT), 0) AS point
                		  FROM
                    			MEMBER M
                		  LEFT
                		  JOIN
                    			POINT PO ON M.MEMBER_NO = PO.MEMBER_NO
                		 WHERE
                    			M.MEMBER_ID != 'admin'
	</sql>
	
	<select id="login" parameterType="member" resultType="member">
		<include refid="selectMember"/>
		WHERE
				MEMBER_ID = #{memberId}
		  AND
		  		STATUS = 'Y'
	</select>
	
	<select id="getMember" parameterType="String" resultType="member">
		<include refid="selectMember"/>
		WHERE
				MEMBER_ID = #{memberId}
	</select>
	
	<insert id="insMember" parameterType="member">
		INSERT 
			INTO MEMBER (
						 MEMBER_NO,
            			 MEMBER_ID,
			             MEMBER_PW,
			             NAME,
			             EMAIL,
			             TELL,
			             ADDR1,
			             ADDR2,
			             POSTCODE,
			             BIRTH
        	   			) 
        	   VALUES   (
        	   			 member_SEQ.NEXTVAL,
			             #{memberId},
			             #{memberPw},
			             #{name},
			             #{email},
			             #{tell},
			             #{addr1},
			             #{addr2},
			             #{postcode},
			             #{birth}
       					)
	</insert>
	
	<insert id="insGenre" parameterType="MemberGenre">
		INSERT
			INTO MEMBER_GENRE (
						TAG_NO,
						MEMBER_NO
						)
				VALUES (
						#{tagNo},
						member_SEQ.CURRVAL
				     	)
	</insert>
	  
	<select id="infoId" parameterType="member" resultType="member">
		SELECT
				MEMBER_ID memberId,
				MEMBER_PW memberPw,
				NAME,
				EMAIL
		  FROM
		  		MEMBER
	  	 WHERE
	  	 		MEMBER_ID = #{memberId}
		   AND		  	 
	  	 		NAME = #{name}
  	 	   AND	
	  	 		EMAIL = #{email} 
	</select>
	
	<update id="pwChange" parameterType="member">
		UPDATE
				MEMBER
		   SET
		   		MEMBER_PW = #{memberPw}
	   	 WHERE
	   	 		MEMBER_ID = #{memberId}
		   AND
		        NAME = #{name}
		   AND
		        EMAIL = #{email}
	</update>
	
	
	
	<!-- 관리자 페이지 : 회원 1명 상세정보 조회 -->
	<select id="getOneMember" parameterType="String" resultType="member">
		<include refid="selectMember"/>
		WHERE
				MEMBER_NO = #{memberNo}
	</select>
	
    <!-- 관리자 페이지 : 전체회원 조회(페이징 적용) -->
    <select id="findAllMembers" parameterType="map" resultType="member">
        <include refid="selectAdminMember" />
                    	   AND
                    	   		M.STATUS = 'Y'
                		 GROUP
                		 	BY
                    			M.MEMBER_NO, M.MEMBER_ID, M.NAME, M.TELL, M.ADDR1, M.ADDR2, M.POSTCODE, M.STATUS, M.BIRTH, M.EMAIL, M.RESDATE
                		 ORDER
                		 	BY
                    			M.MEMBER_NO ASC)
            			 )
        		 WHERE
            			RNUM BETWEEN #{startValue} AND #{endValue}
    </select>
    
    <!-- 관리자 페이지 : 탈퇴회원 조회(페이징 적용) -->
    <select id="findWithdrawnMembers" parameterType="map" resultType="member">
        <include refid="selectAdminMember" />
                    	   AND
                    	   		M.STATUS = 'N'
                		 GROUP
                		 	BY
                    			M.MEMBER_NO, M.MEMBER_ID, M.NAME, M.TELL, M.ADDR1, M.ADDR2, M.POSTCODE, M.STATUS, M.BIRTH, M.EMAIL, M.RESDATE
                		 ORDER
                		 	BY
                    			M.MEMBER_NO ASC)
            			 )
        		 WHERE
            			RNUM BETWEEN #{startValue} AND #{endValue}
    </select>

    <!-- 회원 수 카운트 쿼리 -->
    <select id="memberCount" resultType="int">
        SELECT
            COUNT(M.MEMBER_NO)
        FROM
            MEMBER M
        WHERE
            M.MEMBER_ID != 'admin'
    </select>

</mapper>
