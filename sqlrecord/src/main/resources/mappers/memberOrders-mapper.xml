<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sqlrecord.sqlrecord.orders.model.dao.OrdersMapper">

	
	
	<insert id="insertMemberOrders">
		INSERT
		INTO
				MEMBER_ORDERS
		VALUES
				(
				MEMBER_ORDERS_SEQ.NEXTVAL,
				#{memberOrdersAddress},
				#{memberOrdersAddress2},
				#{memberOrdersPostcode},
				SYSDATE,
				#{memberNo}
				)
	<selectKey resultType="_int" keyProperty="memberOrdersNo" order="AFTER">
		SELECT MEMBER_ORDERS_SEQ.CURRVAL FROM DUAL
	</selectKey>
	</insert>


	<insert id="insertOrdersDetail" parameterType="memberOrdersDetail">
		<selectKey resultType="_int" keyProperty="MEMBER_ORDERS_DETAIL_NO" order="BEFORE">
			SELECT NVL(MAX(MEMBER_ORDERS_DETAIL_NO)+1,0) FROM MEMBER_ORDERS_DETAIL 
		</selectKey>		
		<foreach collection="list" item="item" separator=" " index="index" open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO MEMBER_ORDERS_DETAIL (
			
	            MEMBER_ORDERS_DETAIL_NO,
	            PRODUCT_NO,
	            MEMBER_ORDERS_NO,
	            MEMBER_ORDERS_DETAIL_AMOUNT,
	            MEMBER_ORDERS_DETAIL_PRICE

        	) 
			VALUES
			(
			#{MEMBER_ORDERS_DETAIL_NO} + #{index},
			#{item.product.productNo},
            #{item.memberOrders.memberOrdersNo} ,
            #{item.memberOrdersDetailAmount} ,
            #{item.memberOrdersDetailPrice} 
            )
		</foreach>
	</insert>
	

	
	
	
	
	
	
	<resultMap type="memberOrdersDetail" id="odRM">
    	<id property="memberOrdersDetailNo" column="MEMBER_orders_detail_no"/>
    	<result property="memberOrdersDetailAmount" column="MEMBER_orders_detail_amount"/>  
	    <result property="memberOrdersDetailPrice" column="MEMBER_orders_detail_price"/>
	    <result property="trackingNum" column="TRACKING_NUM"/>
	    <result property="memberOrdersDetailExd" column="MEMBER_ORDERS_DETAIL_EXD"/>
	    <result property="memberOrdersDetailStatus" column="MEMBER_ORDERS_DETAIL_STATUS"/>
	    <association property="product" resultMap="com.sqlrecord.sqlrecord.product.model.dao.ProductMapper.prm" />
	    <association property="memberOrders" javaType="memberOrders">
	    	<result property="memberOrdersNo" column="MEMBER_ORDERS_NO"/>
	        <result property="memberOrdersAddress" column="MEMBER_ORDERS_ADDRESS"/>
	        <result property="memberOrdersAddress2" column="MEMBER_ORDERS_ADDRESS2"/>
	        <result property="memberOrdersPostcode" column="MEMBER_ORDERS_POSTCODE"/>
	        <result property="memberOrdersDate" column="MEMBER_ORDERS_DATE"/>
	        <result property="memberNo" column="MEMBER_NO"/>
	    </association>
	</resultMap>
	
	
	
	<select id="getOrdersDetailAll" resultMap="odRM">
        SELECT
                mod.MEMBER_ORDERS_DETAIL_NO,
		        p.PRODUCT_NO,
                p.PRODUCT_NAME,
                p.product_cate,
                p.product_price,
                p.product_status,
                mo.MEMBER_NO,
                mo.MEMBER_ORDERS_NO,
                mo.MEMBER_ORDERS_ADDRESS,
                mo.MEMBER_ORDERS_ADDRESS2,
                mo.MEMBER_ORDERS_POSTCODE,
                mo.MEMBER_ORDERS_DATE,
		        mod.MEMBER_ORDERS_DETAIL_AMOUNT,
		        mod.MEMBER_ORDERS_DETAIL_PRICE,
		        mod.MEMBER_ORDERS_DETAIL_EXD,
		        mod.TRACKING_NUM,
		        mod.MEMBER_ORDERS_DETAIL_STATUS
        FROM
                MEMBER_ORDERS_DETAIL mod
        JOIN
                MEMBER_ORDERS mo
        ON
                mod.MEMBER_ORDERS_NO = mo.MEMBER_ORDERS_NO        
        JOIN
        		PRODUCT p
        ON	
        		mod.PRODUCT_NO = p.PRODUCT_NO
        ORDER
        BY
                MEMBER_ORDERS_DATE
        DESC
	</select>
	
	
	
	
	<select id="getOrdersDetail" resultMap="odRM">
        SELECT
                mod.MEMBER_ORDERS_DETAIL_NO,
		        p.PRODUCT_NO,
                p.PRODUCT_NAME,
                p.product_cate,
                p.product_price,
                p.product_status,
                mo.MEMBER_NO,
                mo.MEMBER_ORDERS_NO,
                mo.MEMBER_ORDERS_ADDRESS,
                mo.MEMBER_ORDERS_ADDRESS2,
                mo.MEMBER_ORDERS_POSTCODE,
                mo.MEMBER_ORDERS_DATE,
		        mod.MEMBER_ORDERS_DETAIL_AMOUNT,
		        mod.MEMBER_ORDERS_DETAIL_PRICE,
		        mod.MEMBER_ORDERS_DETAIL_EXD,
		        mod.TRACKING_NUM,
		        mod.MEMBER_ORDERS_DETAIL_STATUS
        FROM
                MEMBER_ORDERS_DETAIL mod
        JOIN
                MEMBER_ORDERS mo
        ON
                mod.MEMBER_ORDERS_NO = mo.MEMBER_ORDERS_NO        
        JOIN
        		PRODUCT p
        ON	
        		mod.PRODUCT_NO = p.PRODUCT_NO
       	WHERE
                mo.MEMBER_NO = #{memberNo}
        AND
        		mod.MEMBER_ORDERS_DETAIL_EXD = 'N'
        ORDER
        BY
                MEMBER_ORDERS_DATE
        DESC
	</select>


	
	
	<select id="getOrdersDetailOne" parameterType="_int" resultMap="odRM">
        SELECT
                od.MEMBER_ORDERS_DETAIL_NO,
		        p.PRODUCT_NO,
                p.PRODUCT_NAME,
                p.product_cate,
                p.product_price,
                p.product_status,
                mo.MEMBER_NO,
                mo.MEMBER_ORDERS_ADDRESS,
                mo.MEMBER_ORDERS_ADDRESS2,
                mo.MEMBER_ORDERS_POSTCODE,
                mo.MEMBER_ORDERS_DATE,
		        od.MEMBER_ORDERS_NO,
		        od.MEMBER_ORDERS_DETAIL_AMOUNT,
		        od.MEMBER_ORDERS_DETAIL_PRICE,
		        od.MEMBER_ORDERS_DETAIL_EXD,
		        od.TRACKING_NUM,
		        od.MEMBER_ORDERS_DETAIL_STATUS
        FROM
                MEMBER_ORDERS_DETAIL od
        JOIN
                MEMBER_ORDERS mo
        ON
                od.MEMBER_ORDERS_NO = mo.MEMBER_ORDERS_NO
        JOIN
                PRODUCT p
        ON
                od.PRODUCT_NO = p.product_no
        WHERE
                od.MEMBER_ORDERS_DETAIL_NO = #{memberOrdersDetailNo}           
        ORDER
        BY
                MEMBER_ORDERS_DATE
        DESC
	</select>

	<select id="getOrdersDetailOneForTracking" parameterType="string" resultMap="odRM">
        SELECT
                od.MEMBER_ORDERS_DETAIL_NO,
		        p.PRODUCT_NO,
                p.PRODUCT_NAME,
                p.product_cate,
                p.product_price,
                p.product_status,
                mo.MEMBER_NO,
                mo.MEMBER_ORDERS_ADDRESS,
                mo.MEMBER_ORDERS_ADDRESS2,
                mo.MEMBER_ORDERS_POSTCODE,
                mo.MEMBER_ORDERS_DATE,
		        od.MEMBER_ORDERS_NO,
		        od.MEMBER_ORDERS_DETAIL_AMOUNT,
		        od.MEMBER_ORDERS_DETAIL_PRICE,
		        od.MEMBER_ORDERS_DETAIL_EXD,
		        od.TRACKING_NUM,
		        od.MEMBER_ORDERS_DETAIL_STATUS
        FROM
                MEMBER_ORDERS_DETAIL od
        JOIN
                MEMBER_ORDERS mo
        ON
                od.MEMBER_ORDERS_NO = mo.MEMBER_ORDERS_NO
        JOIN
                PRODUCT p
        ON
                od.PRODUCT_NO = p.product_no
        WHERE
                od.TRACKING_NUM = #{trackingNum}           
        ORDER
        BY
                MEMBER_ORDERS_DATE
        DESC
	</select>


	<update id="updateMemberOrdersStatus" parameterType="map">
		UPDATE
				MEMBER_ORDERS_DETAIL
		SET
				MEMBER_ORDERS_DETAIL_STATUS
				=
				#{string}
		WHERE
				TRACKING_NUM
				=
				#{trackingNum}
	</update>
	
	
	<select id="getProduct" resultType="product">
        SELECT
		        PRODUCT_NO productNo,
		        PRODUCT_NAME productName,
		        PRODUCT_PRICE productPrice,
                PRODUCT_CATE prodcutCate,
		        PRODUCT_STATUS productStatus,
		        PRODUCT_DATE productDate,
		        TAG_NO tagNo
	    FROM
	        	PRODUCT
        ORDER
        BY
                PRODUCT_NO
        DESC			
	</select>
	
	
	
	<update id="updateMemberOrdersExd" parameterType="memberOrdersEx">
		UPDATE
				MEMBER_ORDERS_DETAIL
		SET
				MEMBER_ORDERS_DETAIL_EXD
				=
				#{memberOrdersExType}
		WHERE
				MEMBER_ORDERS_DETAIL_NO
				=
				#{memberOrdersDetail.memberOrdersDetailNo}

	</update>
	
	<insert id="insertMemberOrdersEx" parameterType="memberOrdersEx">
		INSERT
		INTO
				MEMBER_ORDERS_EX
		VALUES
				(
				MEMBER_ORDERS_EX_SEQ.NEXTVAL,
				#{memberOrdersExType},
				#{memberOrdersExAmount},
				SYSDATE,
				#{memberOrdersDetail.memberOrdersDetailNo},
				DEFAULT,
				#{memberOrdersExAddress},
				#{memberOrdersExAddress2},
				#{memberOrdersExPostcode},
				DEFAULT,
				<choose>
					<when test="product.productNo == 0">
						DEFAULT,
					</when>
					<otherwise>
						#{product.productNo},
					</otherwise>
				</choose>
				#{memberOrdersExReason}				
				)
			
	</insert>
	
	
	<resultMap type="memberOrdersEx" id="oeRM">
		<id property="memberOrdersExNo" column="MEMBER_ORDERS_EX_NO"/>
		<result property="memberOrdersExType" column="MEMBER_ORDERS_EX_TYPE"/>
		<result property="memberOrdersExAmount" column="MEMBER_ORDERS_EX_AMOUNT"/>
		<result property="memberOrdersExDate" column="MEMBER_ORDERS_EX_DATE"/>
		<result property="trackingNum" column="TRACKING_NUM"/>
		<result property="memberOrdersExAddress" column="MEMBER_ORDERS_EX_ADDRESS"/>
		<result property="memberOrdersExAddress2" column="MEMBER_ORDERS_EX_ADDRESS2"/>
		<result property="memberOrdersExPostcode" column="MEMBER_ORDERS_EX_POSTCODE"/>
		<result property="memberOrdersExStatus" column="MEMBER_ORDERS_EX_STATUS"/>
		<result property="memberOrdersExReason" column="MEMBER_ORDERS_EX_REASON"/>
		<association property="product" resultMap="com.sqlrecord.sqlrecord.product.model.dao.ProductMapper.prm" />
		<association property="memberOrdersDetail" resultMap="odRM"/>
	</resultMap>

	<select id="getOrdersEx" resultMap="oeRM">
		SELECT
			    moe.MEMBER_ORDERS_EX_NO,
			    moe.MEMBER_ORDERS_EX_TYPE,
			    moe.MEMBER_ORDERS_EX_AMOUNT,
			    moe.MEMBER_ORDERS_EX_DATE,
			    moe.TRACKING_NUM,
			    moe.MEMBER_ORDERS_EX_ADDRESS,
			    moe.MEMBER_ORDERS_EX_ADDRESS2,
			    moe.MEMBER_ORDERS_EX_POSTCODE,
			    moe.MEMBER_ORDERS_EX_STATUS,
			    moe.MEMBER_ORDERS_EX_REASON,
			    p.PRODUCT_NO,
			    p.PRODUCT_NAME,
			    p.PRODUCT_PRICE,
			    p.PRODUCT_STATUS,
			    p.PRODUCT_DATE,
			    p.TAG_NO,
			    p.PRODUCT_DETAIL,
			    p.PRODUCT_CATE,
			    mod.MEMBER_ORDERS_DETAIL_NO,
			    mod.MEMBER_ORDERS_DETAIL_AMOUNT,
			    mod.MEMBER_ORDERS_DETAIL_PRICE,
			    mod.MEMBER_ORDERS_DETAIL_EXD,
			    mod.MEMBER_ORDERS_DETAIL_STATUS,
			    mo.MEMBER_ORDERS_NO,
			    mo.MEMBER_ORDERS_ADDRESS,
			    mo.MEMBER_ORDERS_ADDRESS2,
			    mo.MEMBER_ORDERS_POSTCODE,
			    mo.MEMBER_ORDERS_DATE,
			    mo.MEMBER_NO
		FROM
		    	MEMBER_ORDERS_EX moe
		LEFT JOIN
		    	MEMBER_ORDERS_DETAIL mod ON moe.MEMBER_ORDERS_DETAIL_NO = mod.MEMBER_ORDERS_DETAIL_NO
		LEFT JOIN
		    	PRODUCT p ON mod.PRODUCT_NO = p.PRODUCT_NO
		LEFT JOIN
		    	MEMBER_ORDERS mo ON mod.MEMBER_ORDERS_NO = mo.MEMBER_ORDERS_NO
		WHERE
		    	mo.MEMBER_NO = #{memberNo}
		ORDER BY
    			moe.MEMBER_ORDERS_EX_NO 
    	DESC
		
	</select>
	
  <!-- ================================ 관리자 페이지 ================================ -->

	<select id="getTotalOrdersCount" resultType="int">
        SELECT
        		COUNT(DISTINCT MEMBER_ORDERS_NO)
          FROM
          		MEMBER_ORDERS
    </select>

    <select id="getAllMemberOrders" resultMap="memberOrdersResultMap">
	    SELECT 
		        rnum,
		        MEMBER_ORDERS_NO,
		        MEMBER_ORDERS_ADDRESS,
		        MEMBER_ORDERS_ADDRESS2,
		        MEMBER_ORDERS_POSTCODE,
		        MEMBER_ORDERS_DATE,
		        MEMBER_ID,
		        PRODUCT_CATE,
		        PRODUCT_NO,
		        PRODUCT_NAME,
		        PRODUCT_STATUS,
		        totalPrice,
		        detailsCount,
		        MEMBER_ORDERS_DETAIL_STATUS
	      FROM (
		        SELECT 
		            ROWNUM AS rnum,
		            O.MEMBER_ORDERS_NO,
		            O.MEMBER_ORDERS_ADDRESS,
		            O.MEMBER_ORDERS_ADDRESS2,
		            O.MEMBER_ORDERS_POSTCODE,
		            O.MEMBER_ORDERS_DATE,
		            M.MEMBER_ID,
		            (
		                SELECT P.PRODUCT_CATE
		                FROM PRODUCT P
		                JOIN MEMBER_ORDERS_DETAIL OD ON P.PRODUCT_NO = OD.PRODUCT_NO
		                WHERE OD.MEMBER_ORDERS_NO = O.MEMBER_ORDERS_NO
		                AND ROWNUM = 1
		            ) AS PRODUCT_CATE,
		            (
		                SELECT P.PRODUCT_NO
		                FROM PRODUCT P
		                JOIN MEMBER_ORDERS_DETAIL OD ON P.PRODUCT_NO = OD.PRODUCT_NO
		                WHERE OD.MEMBER_ORDERS_NO = O.MEMBER_ORDERS_NO
		                AND ROWNUM = 1
		            ) AS PRODUCT_NO,
		            (
		                SELECT P.PRODUCT_NAME
		                FROM PRODUCT P
		                JOIN MEMBER_ORDERS_DETAIL OD ON P.PRODUCT_NO = OD.PRODUCT_NO
		                WHERE OD.MEMBER_ORDERS_NO = O.MEMBER_ORDERS_NO
		                AND ROWNUM = 1
		            ) AS PRODUCT_NAME,
		            (
		                SELECT P.PRODUCT_STATUS
		                FROM PRODUCT P
		                JOIN MEMBER_ORDERS_DETAIL OD ON P.PRODUCT_NO = OD.PRODUCT_NO
		                WHERE OD.MEMBER_ORDERS_NO = O.MEMBER_ORDERS_NO
		                AND ROWNUM = 1
		            ) AS PRODUCT_STATUS,
		            (
		                SELECT SUM(OD.MEMBER_ORDERS_DETAIL_PRICE)
		                FROM MEMBER_ORDERS_DETAIL OD
		                WHERE OD.MEMBER_ORDERS_NO = O.MEMBER_ORDERS_NO
		            ) AS totalPrice,
		            (
		                SELECT COUNT(*)
		                FROM MEMBER_ORDERS_DETAIL OD
		                WHERE OD.MEMBER_ORDERS_NO = O.MEMBER_ORDERS_NO
		            ) AS detailsCount,
		            (
		                SELECT OD.MEMBER_ORDERS_DETAIL_STATUS
		                FROM MEMBER_ORDERS_DETAIL OD
		                WHERE OD.MEMBER_ORDERS_NO = O.MEMBER_ORDERS_NO
		                AND ROWNUM = 1
		            ) AS MEMBER_ORDERS_DETAIL_STATUS
	          FROM 
	            	MEMBER_ORDERS O
	          JOIN 
	            	MEMBER M ON O.MEMBER_NO = M.MEMBER_NO
	         ORDER
	         	BY 
	            	O.MEMBER_ORDERS_NO DESC
	    		)
	    WHERE rnum BETWEEN #{startValue} AND #{endValue}
	</select>
	
	<resultMap id="memberOrdersResultMap" type="memberOrdersDTO">
	    <id property="memberOrdersNo" column="MEMBER_ORDERS_NO"/>
	    <result property="addr1" column="MEMBER_ORDERS_ADDRESS"/>
	    <result property="addr2" column="MEMBER_ORDERS_ADDRESS2"/>
	    <result property="postcode" column="MEMBER_ORDERS_POSTCODE"/>
	    <result property="orderDate" column="MEMBER_ORDERS_DATE"/>
	    <result property="memberId" column="MEMBER_ID"/>
	    <result property="productCate" column="PRODUCT_CATE"/>
	    <result property="productNo" column="PRODUCT_NO"/>
	    <result property="productName" column="PRODUCT_NAME"/>
	    <result property="productStatus" column="PRODUCT_STATUS"/>
	    <result property="totalPrice" column="totalPrice"/>
	    <result property="detailsCount" column="detailsCount"/>
	    <result property="memberOrdersDetailStatus" column="MEMBER_ORDERS_DETAIL_STATUS"/>
	</resultMap>

    <select id="getMemberOrderDetails" resultMap="memberOrdersDetailResultMap">
        SELECT
			    OD.MEMBER_ORDERS_DETAIL_NO,
			    OD.MEMBER_ORDERS_DETAIL_AMOUNT,
			    OD.MEMBER_ORDERS_DETAIL_PRICE,
			    OD.MEMBER_ORDERS_DETAIL_STATUS,
			    OD.TRACKING_NUM,
			    P.PRODUCT_NO,
			    P.PRODUCT_NAME,
			    P.PRODUCT_PRICE,
			    P.PRODUCT_STATUS,
			    P.PRODUCT_CATE,
			    PP.PHOTO_NAME,
			    PP.PHOTO_PATH
		  FROM
		    	MEMBER_ORDERS_DETAIL OD
		  JOIN
		    	PRODUCT P ON OD.PRODUCT_NO = P.PRODUCT_NO
		  JOIN
		    	(
			        SELECT
				            PRODUCT_NO,
				            PHOTO_NAME,
				            PHOTO_PATH
			          FROM
			            	PRODUCT_PHOTOS
			         WHERE
				            (PRODUCT_NO, PHOTO_NO) IN (
				                SELECT
				                		PRODUCT_NO,
				                		MIN(PHOTO_NO)
				                  FROM
				                  		PRODUCT_PHOTOS
				                 GROUP
				                 	BY
				                 		PRODUCT_NO
				            )
		    	) PP ON P.PRODUCT_NO = PP.PRODUCT_NO
		 WHERE
		    	OD.MEMBER_ORDERS_NO = #{memberOrdersNo}
		 ORDER
		 	BY
		    	OD.MEMBER_ORDERS_DETAIL_NO ASC
    </select>

    <resultMap id="memberOrdersDetailResultMap" type="memberOrdersDetailDTO">
        <id property="memberOrdersDetailNo" column="MEMBER_ORDERS_DETAIL_NO"/>
        <result property="memberOrdersDetailAmount" column="MEMBER_ORDERS_DETAIL_AMOUNT"/>
        <result property="memberOrdersDetailPrice" column="MEMBER_ORDERS_DETAIL_PRICE"/>
        <result property="memberOrdersDetailStatus" column="MEMBER_ORDERS_DETAIL_STATUS"/>
        <result property="trackingNum" column="TRACKING_NUM"/>
        <association property="product" javaType="productDTO">
            <id property="productNo" column="PRODUCT_NO"/>
            <result property="productName" column="PRODUCT_NAME"/>
            <result property="productPrice" column="PRODUCT_PRICE"/>
            <result property="productStatus" column="PRODUCT_STATUS"/>
            <result property="productCate" column="PRODUCT_CATE"/>
            <collection property="productPhotosList" ofType="productPhotosDTO">
                <result property="productPhotosName" column="PHOTO_NAME"/>
                <result property="productPhotosPath" column="PHOTO_PATH"/>
            </collection>
        </association>
    </resultMap>
	
	<!-- 배송상태 업데이트(송장번호 추가) -->
	<update id="updateOrderStatus" parameterType="map">
        UPDATE 
        		MEMBER_ORDERS_DETAIL
           SET 
           		MEMBER_ORDERS_DETAIL_STATUS = #{status},
            	TRACKING_NUM = #{trackingNum}
         WHERE 
        		MEMBER_ORDERS_DETAIL_NO = #{detailNo}
    </update>

	<!-- 송장번호 테이블 삽입 -->
    <insert id="insertTrackingNum" parameterType="string">
        INSERT
          INTO
          		TRACKING_NUM (TRACKING_NUM)
        VALUES
        		(#{trackingNum})
    </insert>
    
	<!-- memberOrdersDetailsNos 값 받아와 주문수락/거절 처리 -->
	<select id="getMemberOrdersDetailNos" parameterType="_int" resultType="_int">
	    SELECT
	    		MEMBER_ORDERS_DETAIL_NO
	      FROM
	      		MEMBER_ORDERS_DETAIL
	     WHERE
	     		MEMBER_ORDERS_NO = #{memberOrdersNo}
	</select>
	
	<select id="searchMemberCount" parameterType="map" resultType="int">
	    SELECT 
	    		COUNT(*)
	      FROM 
	    		MEMBER_ORDERS
	     WHERE 
	    	<if test="condition == 'memberId'">
	        	MEMBER_ID LIKE CONCAT('%', #{keyword}, '%')
	    	</if>
	    	<if test="condition == 'productName'">
	        	PRODUCT_NAME LIKE CONCAT('%', #{keyword}, '%')
	    	</if>
	</select>
	
	<select id="findByConditionAndKeyword" parameterType="map" resultType="MemberOrdersDTO">
	    SELECT 
		        MEMBER_ORDERS_NO,
		        MEMBER_ID,
		        PRODUCT_NO,
		        PRODUCT_NAME,
		        ORDER_DATE,
		        ORDER_STATUS
	      FROM
	    		MEMBER_ORDERS
	     WHERE 
		    <if test="condition == 'memberId'">
		        MEMBER_ID LIKE CONCAT('%', #{keyword}, '%')
		    </if>
		    <if test="condition == 'productName'">
		        PRODUCT_NAME LIKE CONCAT('%', #{keyword}, '%')
		    </if>
		 ORDER 
		 	BY 
		 		MEMBER_ORDERS_NO DESC
		 LIMIT 
		 		#{rowBounds.offset}, #{rowBounds.limit}
	</select>
</mapper>